
CLR-DATAGRID {
    $font-size: 13px;

    // avoid annoyance scrollbar when grid is too narrow to render columns
    // this seems to fix the last column with "overhang" problem
    overflow-x: hidden;

    > .datagrid {
        margin: 0; // nasty margin and spacing added to component by lib
        width: inherit; // allocated by container, not by its own content
        height: inherit;
        border: 0; // clean

        > .datagrid-table-wrapper {

            > .datagrid-table {

                > .datagrid-header {
                    background-color: transparent;

                    > .datagrid-row {

                        > .datagrid-row-master {

                            // enclose each header
                            CLR-DG-COLUMN {

                                // simplify align
                                .datagrid-column-title {

                                }

                            }
                        }
                    }
                }
            }
        }

        .datagrid-column:not(:last-child)::before {
            // BUGGY BAD
            background: none; // clr reset - what is this separator doing. WRONG. it completely disrupts grids being contained
        }

    }

    // fixed footer columns under main grid
    > .datagrid-footer {
        // reset
        font-size: inherit;
        line-height: inherit;
        padding: 0;
        display: block;

        // clarity class
        > .datagrid-footer-description {
            min-height: 1px;

            // re-purpose clarity structure ( not the original grid)
            > .datagrid-host {
                overflow: hidden; // clip as width of child grid is larger

                // re-purpose clarity structure ( not the original grid)
                > .datagrid.synthetic-grid-enclosure {
                    position: relative; // to sync "Scroll"
                    margin: 0; // clr reset
                    max-width: none; // let the size and scroll constrain it better
                    overflow: hidden;
                    border: 0;

                    // ngx-card-deck custom class injected container ( for locked row footer row placement )
                    > .datagrid-footer-container {
                        flex-shrink: 0;
                        display: block;

                        &:hover {
                            background: none; // reset row highlight
                        }


                        > .datagrid-footer-container-master {
                            border-top-style: solid; // partition body from locked footer
                            border-top-width: 1px; // partition body from locked footer


                            .datagrid-row-scrollable {
                                flex-direction: row;

                                // footer item cell
                                .datagrid-cell {
                                    flex: 1 1 auto; // stretchy

                                    // whenever respective column is manually resized
                                    &.datagrid-fixed-width {
                                        flex: 0 0 auto;
                                    }
                                }

                            }
                        }

                    }
                }

            }
        }

    }

    // ~~~~~~~~ decorations ~~~~~~~~

    // the filters just annoy
    &.removeFilters {

        .datagrid-head {

            CLR-DG-STRING-FILTER {
                display: none;
            }

        }

    }

    // no col resizing
    &.removeColumnSeparators {
        .datagrid-column-separator {
            display: none;
        }
    }

}
